AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Create bingo state machine and functions for each step

Parameters:
    TwitterConsumerKey: 
      Description: Twitter app consumer key
      Type: String
      NoEcho: true
      Default: ''

    TwitterConsumerSecret: 
      Description: Twitter app consumer secret
      Type: String
      NoEcho: true
      Default: ''

    TwitterAppSecret: 
      Description: Twitter app secret
      Type: String
      NoEcho: true
      Default: ''

    TwitterAppToken: 
      Description: Twitter app token
      Type: String 
      NoEcho: true
      Default: ''
Resources:

  BingoStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/bingo.asl.json
      DefinitionSubstitutions:
        PostBingoBannerFunctionArn: !GetAtt PostBingoBannerFunction.Arn
        FindPlayersFunctionArn: !GetAtt FindPlayersFunction.Arn
        CreateTicketFunctionArn: !GetAtt CreateTicketFunction.Arn
        NumbersDrawFunctionArn: !GetAtt NumbersDrawFunction.Arn
        FindWinnerFunctionArn: !GetAtt FindWinnerFunction.Arn
        NotifyWinnerFunctionArn: !GetAtt NotifyWinnerFunction.Arn
        DestroyMessagesFunctionArn: !GetAtt DestroyMessagesFunction.Arn
        SendErrorMessageFunctionArn: !GetAtt SendErrorMessageFunction.Arn
        BingoMessagesQueueFIFOUrl: !Ref BingoMessagesQueueFIFO
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref PostBingoBannerFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FindPlayersFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateTicketFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref NumbersDrawFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FindWinnerFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref NotifyWinnerFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref NotifyWinnerFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref SendErrorMessageFunction
        - SQSSendMessagePolicy:
            QueueName: !GetAtt BingoMessagesQueueFIFO.QueueName

  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: 
      FunctionName: 
      Handler: 
      KmsKeyArn: 
      MemorySize: 128
      Role: role-arn
      Runtime: nodejs | nodejs4.3 | nodejs6.10 | nodejs8.10 | java8 | python2.7 | python3.6 | dotnetcore1.0 | dotnetcore2.0 | dotnetcore2.1 | nodejs4.3-edge | go1.x
      Timeout: 
      VpcConfig:
        SecurityGroupIds:
          - sg-id
        SubnetIds:
          - subnet-id
      Environment:
        Variables:
          key1: value1 # A map of key-value pairs that the Lambda function can access
      Code:
        S3Bucket: 
        S3Key: 
        S3ObjectVersion: 
        ZipFile: 


  PostBingoBannerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/BingoBanner/app.handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 120
      MemorySize: 128
      Environment:
        Variables:
          CONSUMER_KEY: !Ref TwitterConsumerKey
          CONSUMER_SECRET: !Ref TwitterConsumerSecret
          SECRET: !Ref TwitterAppSecret
          TOKEN: !Ref TwitterAppToken

  FindPlayersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/FindPlayers/app.handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 120
      MemorySize: 128
      Environment:
        Variables:
          CONSUMER_KEY: !Ref TwitterConsumerKey
          CONSUMER_SECRET: !Ref TwitterConsumerSecret
          SECRET: !Ref TwitterAppSecret
          TOKEN: !Ref TwitterAppToken

  CreateTicketFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/CreateTicket/app.handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 120
      MemorySize: 128
      Environment:
        Variables:
          CONSUMER_KEY: !Ref TwitterConsumerKey
          CONSUMER_SECRET: !Ref TwitterConsumerSecret
          SECRET: !Ref TwitterAppSecret
          TOKEN: !Ref TwitterAppToken

  NumbersDrawFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/NumbersDraw/app.handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 120
      MemorySize: 128
      Environment:
        Variables:
          CONSUMER_KEY: !Ref TwitterConsumerKey
          CONSUMER_SECRET: !Ref TwitterConsumerSecret
          SECRET: !Ref TwitterAppSecret
          TOKEN: !Ref TwitterAppToken

  FindWinnerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/FindWinner/app.handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 120
      MemorySize: 128
      Environment:
        Variables:
          CONSUMER_KEY: !Ref TwitterConsumerKey
          CONSUMER_SECRET: !Ref TwitterConsumerSecret
          SECRET: !Ref TwitterAppSecret
          TOKEN: !Ref TwitterAppToken

  NotifyWinnerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/NotifyWinner/app.handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 120
      MemorySize: 128
      Environment:
        Variables:
          CONSUMER_KEY: !Ref TwitterConsumerKey
          CONSUMER_SECRET: !Ref TwitterConsumerSecret
          SECRET: !Ref TwitterAppSecret
          TOKEN: !Ref TwitterAppToken

  SendErrorMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/SendErrorMessage/app.handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 60
      MemorySize: 128
      Environment:
        Variables:
          CONSUMER_KEY: !Ref TwitterConsumerKey
          CONSUMER_SECRET: !Ref TwitterConsumerSecret
          SECRET: !Ref TwitterAppSecret
          TOKEN: !Ref TwitterAppToken

  DestroyMessagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/DestroyMessages/app.handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 120
      MemorySize: 128
      Environment:
        Variables:
          CONSUMER_KEY: !Ref TwitterConsumerKey
          CONSUMER_SECRET: !Ref TwitterConsumerSecret
          SECRET: !Ref TwitterAppSecret
          TOKEN: !Ref TwitterAppToken
      Tags:
        - Key: Project
          Value: sam-bingo-app

  WSSOnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/BingoWSS/app.ondisconnect_handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 45
      MemorySize: 128

  WSSOnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/BingoWSS/app.onconnect_handler
      Runtime: nodejs14.x
      PackageType: Zip
      Timeout: 45
      MemorySize: 128

  BingoTicketTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - 
          AttributeName: BingoExecutionName
          AttributeType: "S"
        - 
          AttributeName: PlayerId
          AttributeType: "S"
      KeySchema:
        - 
          AttributeName: BingoExecutionName
          KeyType: "HASH"
        - 
          AttributeName: PlayerId
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5 
      TableName: BingoTicket
      Tags:
        - Key: Project
          Value: sam-bingo-app

  BingoMessagesQueueFIFO:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: BingoMessages.fifo
      FifoQueue:  true
      ContentBasedDeduplication: true
      Tags:
        - Key: project
          Value: sam-bingo-app

  CreateTicketTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: CreateTicketFunction
      Destination:
        Id: BingoTicketTable
      Permissions:
        - Write
        - Read

  FindWinnerTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: FindWinnerFunction
      Destination:
        Id: BingoTicketTable
      Permissions:
        - Read

  WSSOnDisconnectFunctionTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: WSSOnDisconnectFunction
      Destination:
        Id: BingoTicketTable
      Permissions:
        - Read
        - Write
        
  WSSOnConnectFunctionTableConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: WSSOnConnectFunction
      Destination:
        Id: BingoTicketTable
      Permissions:
        - Write